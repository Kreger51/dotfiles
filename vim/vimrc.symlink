" =========================================================
"  Vundle configuration
" =========================================================
set nocompatible    " Required
filetype off        " Required

" Set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'AndrewRadev/linediff.vim'
Plugin 'LaTeX-Box-Team/LaTeX-Box'
" Plugin 'reedes/vim-colors-pencil'
" Plugin 'altercation/vim-colors-solarized'

" All of your plugins must be added before the following line.
call vundle#end()            " required
filetype plugin indent on    " required
" =========================================================

" =========================================================
" Colors
" =========================================================
syntax on

if $SUPPORTCOLORS
    set background=dark
    colorscheme brogrammer
else
    set background=light
    colorscheme default
endif
" =========================================================

" =========================================================
" Miscellaneous
" =========================================================
" UTF-8 encoding
set enc=utf-8
" Fix delay when pressing O after Escape
" See https://github.com/vim/vim/issues/24
set timeout timeoutlen=5000 ttimeoutlen=100
" Smart case sensitiveness when searching
set ignorecase
set smartcase
" Treat .tex files as latex
let g:tex_flavor = "latex"
" =========================================================

" =========================================================
" Spaces and Tabs
" =========================================================
set expandtab     " Convert tabs to spaces. Screw tabs.
set shiftwidth=4  " Number of spaces per indent level.
set softtabstop=4 " Number of visual spaces per tab.
set smartindent   " Smart indent on new lines.
set autoindent    " Use indentation from previous line.
" Allow backspacing over everything in insert mode.
set bs=indent,eol,start
" Delete trailing whitespace on save
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()
" =========================================================

" =========================================================
" UI Configuration
" =========================================================
set ruler         " Always show cursor position.
set number        " Show line numbers.
set cursorline    " Highlight line where cursor is.
set wildmenu      " Show menu for autocomplete in ex mode.
set laststatus=2  " Show statusline
set statusline+=%F " Show current file in status line
set statusline+=\ \-\-\ col:\ %c
set hlsearch      " Highlight search.
" =========================================================

" =========================================================
" Macros
" =========================================================
" Fortran-specific
" ---------------------------------------------------------
" Insert continuation line character
let @n='0lllllr&'
" Insert comment
let @c='0rC'
" =========================================================

" =========================================================
" Remaps
" =========================================================
let mapleader=","
let maplocalleader="\\"
" Remap arrow keys to move between vim windows
" mouhahaha
nnoremap <Right> <C-w>l
nnoremap <Left> <C-w>h
nnoremap <Up> <C-w>k
nnoremap <Down> <C-w>j
" Search for visually selected text
vnoremap // y/<C-R>"<CR>
" Search for whole word.
nnoremap <Leader>/ :exec "/\\<".input("Enter word. ")."\\>"<CR>
" =========================================================

let fortran_do_enddo=1
